{"version":3,"file":"static/js/978.94b48467.chunk.js","mappings":"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","sources":["operations/operationsLogin.js","components/Login.jsx","pages/AdminLogin.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// створюємо інстанс axios\r\nexport const api = axios.create({\r\n  baseURL: \"https://bim-rest-api.onrender.com/api\",\r\n});\r\n\r\n// =============== AUTH ===============\r\nexport const login = async (values) => {\r\n  try {\r\n    const { data } = await api.post(\"/auth/login\", {\r\n      name: values.name,\r\n      email: values.email,\r\n      password: values.password,\r\n    });\r\n\r\n    if (data.token) {\r\n      localStorage.setItem(\"token\", data.token);\r\n    }\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Login failed:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const logout = async (token) => {\r\n  await api.post(\r\n    \"/auth/logout\",\r\n    {},\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n  localStorage.removeItem(\"token\");\r\n};\r\n\r\n// =============== BLOGS ===============\r\n\r\n// ✅ публічні блоги (для користувачів сайту)\r\nexport const getBlogs = async () => {\r\n  const { data } = await api.get(\"/blog/public\");\r\n  return data;\r\n};\r\n\r\n// ✅ усі блоги (для адмінки)\r\nexport const getAdminBlogs = async (token) => {\r\n  const { data } = await api.get(\"/blog\", {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  return data;\r\n};\r\n\r\n// один блог (може бути як публічний, так і адмінський)\r\nexport const getBlog = async (id) => {\r\n  const { data } = await api.get(`/blog/${id}`);\r\n  return data;\r\n};\r\n\r\n// створення блогу\r\nexport const createBlog = async ({ title, content, publishDate, isPublished }, token) => {\r\n  const res = await api.post(\r\n    \"/blog\",\r\n    { title, content, publishDate, isPublished },\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n  return res.data;\r\n};\r\n\r\n// оновлення блогу\r\nexport const updateBlog = async ({ id, data, token }) => {\r\n  const res = await api.put(`/blog/${id}`, data, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  return res.data;\r\n};\r\n\r\n// видалення блогу\r\nexport const deleteBlog = async (id, token) => {\r\n  const res = await api.delete(`/blog/${id}`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  return res.data;\r\n};\r\n","import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { login } from \"../operations/operationsLogin\";\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-xl shadow-lg p-8 max-w-md w-full relative\">\r\n        <h2 className=\"text-xl font-bold text-blue-700 mb-6 text-center\">\r\n          Login to Admin\r\n        </h2>\r\n        <Formik\r\n          initialValues={{ name: \"\", email: \"\", password: \"\" }}\r\n          validate={(values) => {\r\n            const errors = {};\r\n            if (!values.email) {\r\n              errors.email = \"Email is required\";\r\n            } else if (\r\n              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n            ) {\r\n              errors.email = \"Invalid email address\";\r\n            } else if (!values.name) {\r\n              errors.name = \"Name is required\";\r\n            }\r\n            if (!values.password) {\r\n              errors.password = \"Password is required\";\r\n            }\r\n            return errors;\r\n          }}\r\n          onSubmit={async (values, { setSubmitting, setErrors }) => {\r\n            try {\r\n              await login(values);\r\n              navigate(\"/admin/blogs\"); \r\n            } catch (err) {\r\n              console.error(err);\r\n              setErrors({ email: \"Invalid credentials\" });\r\n            } finally {\r\n              setSubmitting(false);\r\n            }\r\n          }}\r\n        >\r\n          {({ isSubmitting }) => (\r\n            <Form className=\"flex flex-col gap-4\">\r\n              <div>\r\n                <Field\r\n                  type=\"name\"\r\n                  name=\"name\"\r\n                  placeholder=\"Name *\"\r\n                  className=\"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n                />\r\n                <ErrorMessage\r\n                  name=\"name\"\r\n                  component=\"div\"\r\n                  className=\"text-red-500 text-sm mt-1\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <Field\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email *\"\r\n                  className=\"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n                />\r\n                <ErrorMessage\r\n                  name=\"email\"\r\n                  component=\"div\"\r\n                  className=\"text-red-500 text-sm mt-1\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <Field\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"Hasło *\"\r\n                  className=\"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n                />\r\n                <ErrorMessage\r\n                  name=\"password\"\r\n                  component=\"div\"\r\n                  className=\"text-red-500 text-sm mt-1\"\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n                className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-6 rounded-lg shadow transition-colors\"\r\n              >\r\n                {isSubmitting ? \"Logging in...\" : \"Zaloguj się\"}\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-6 rounded-lg shadow transition-colors\"\r\n                onClick={() => navigate(\"/\")}\r\n              >\r\n                Powrót na stronę główną\r\n              </button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport Login from \"../components/Login\";\r\n\r\nfunction AdminLogin() {\r\n  return (\r\n    <div>\r\n      <Login />\r\n    </div>\r\n  );\r\n}\r\nexport default AdminLogin;\r\n"],"names":["api","axios","create","baseURL","login","async","data","post","name","values","email","password","token","localStorage","setItem","error","_error$response","console","response","message","logout","headers","Authorization","concat","removeItem","getAdminBlogs","get","createBlog","_ref","title","content","publishDate","isPublished","updateBlog","id","_ref2","put","deleteBlog","delete","navigate","useNavigate","_jsx","className","children","_jsxs","Formik","initialValues","validate","errors","test","onSubmit","setSubmitting","setErrors","err","isSubmitting","Form","Field","type","placeholder","ErrorMessage","component","disabled","onClick","Login"],"sourceRoot":""}