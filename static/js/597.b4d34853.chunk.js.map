{"version":3,"file":"static/js/597.b4d34853.chunk.js","mappings":"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","sources":["components/Login.jsx","pages/AdminLogin.jsx","operations/operationsLogin.js"],"sourcesContent":["import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { login } from \"../operations/operationsLogin\";\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-xl shadow-lg p-8 max-w-md w-full relative\">\r\n        <h2 className=\"text-xl font-bold text-blue-700 mb-6 text-center\">\r\n          Login to Admin\r\n        </h2>\r\n        <Formik\r\n          initialValues={{ name: \"\", email: \"\", password: \"\" }}\r\n          validate={(values) => {\r\n            const errors = {};\r\n            if (!values.email) {\r\n              errors.email = \"Email is required\";\r\n            } else if (\r\n              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n            ) {\r\n              errors.email = \"Invalid email address\";\r\n            } else if (!values.name) {\r\n              errors.name = \"Name is required\";\r\n            }\r\n            if (!values.password) {\r\n              errors.password = \"Password is required\";\r\n            }\r\n            return errors;\r\n          }}\r\n          onSubmit={async (values, { setSubmitting, setErrors }) => {\r\n            try {\r\n              await login(values);\r\n              navigate(\"/admin/blogs\"); \r\n            } catch (err) {\r\n              console.error(err);\r\n              setErrors({ email: \"Invalid credentials\" });\r\n            } finally {\r\n              setSubmitting(false);\r\n            }\r\n          }}\r\n        >\r\n          {({ isSubmitting }) => (\r\n            <Form className=\"flex flex-col gap-4\">\r\n              <div>\r\n                <Field\r\n                  type=\"name\"\r\n                  name=\"name\"\r\n                  placeholder=\"Name *\"\r\n                  className=\"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n                />\r\n                <ErrorMessage\r\n                  name=\"name\"\r\n                  component=\"div\"\r\n                  className=\"text-red-500 text-sm mt-1\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <Field\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email *\"\r\n                  className=\"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n                />\r\n                <ErrorMessage\r\n                  name=\"email\"\r\n                  component=\"div\"\r\n                  className=\"text-red-500 text-sm mt-1\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <Field\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"Hasło *\"\r\n                  className=\"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n                />\r\n                <ErrorMessage\r\n                  name=\"password\"\r\n                  component=\"div\"\r\n                  className=\"text-red-500 text-sm mt-1\"\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n                className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-6 rounded-lg shadow transition-colors\"\r\n              >\r\n                {isSubmitting ? \"Logging in...\" : \"Zaloguj się\"}\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-6 rounded-lg shadow transition-colors\"\r\n                onClick={() => navigate(\"/\")}\r\n              >\r\n                Powrót na stronę główną\r\n              </button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport Login from \"../components/Login\";\r\n\r\nfunction AdminLogin() {\r\n  return (\r\n    <div>\r\n      <Login />\r\n    </div>\r\n  );\r\n}\r\nexport default AdminLogin;\r\n","import axios from \"axios\";\r\n\r\n// створюємо інстанс axios з базовим URL\r\nexport const api = axios.create({\r\n  baseURL: \"https://bim-rest-api.onrender.com/api\",\r\n});\r\n\r\n// збереження/видалення токена в headers і localStorage\r\n// export const setAuthToken = (token) => {\r\n//   if (token) {\r\n//     api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n//     localStorage.setItem(\"token\", token);\r\n//   } else {\r\n//     delete api.defaults.headers.common[\"Authorization\"];\r\n//     localStorage.removeItem(\"token\");\r\n//   }\r\n// };\r\n\r\n// // 🔑 Логін\r\n// export const login = async (credentials) => {\r\n//   const { data } = await api.post(\"/admin/login\", credentials);\r\n//   // відповідає твій бекенд — має віддати { token }\r\n//   if (data.token) {\r\n//     setAuthToken(data.token);\r\n//   }\r\n//   return data;\r\n// };\r\n\r\nexport const login = async (values) => {\r\n  try {\r\n    const { data } = await api.post(\"/auth/login\", {\r\n      name: values.name,\r\n      email: values.email,\r\n      password: values.password,\r\n    });\r\n\r\n    // 🔑 токен зберігаємо у localStorage\r\n    if (data.token) {\r\n      localStorage.setItem(\"token\", data.token);\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Login failed:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n//LogOut\r\nexport const logout = async (token) => {\r\n  await api.post(\r\n    \"/auth/logout\",\r\n    {}, // тіло пусте\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n  localStorage.removeItem(\"token\"); // ⚡ правильно видаляємо\r\n};\r\n\r\n// GET всі блоги\r\nexport const getBlogs = async () => {\r\n  const { data } = await api.get(\"/blog\");\r\n  return data;\r\n};\r\n\r\n// GET один блог\r\nexport const getBlog = async (id) => {\r\n  const { data } = await api.get(`/blog/${id}`);\r\n  return data;\r\n};\r\n\r\n// POST новий блог\r\nexport const createBlog = async ({ title, content }, token) => {\r\n  console.log(title, content);\r\n  const res = await api.post(\r\n    \"/blog\",\r\n    { title, content }, // ✅ правильна структура\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n  console.log(res.data);\r\n  return res.data;\r\n};\r\n\r\n// PUT оновлення блогу\r\nexport const updateBlog = async ({ id, data, token }) => {\r\n  const res = await api.put(`/blog/${id}`, data, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  return res.data;\r\n};\r\n\r\n// DELETE блог\r\nexport const deleteBlog = async (id, token) => {\r\n  const res = await api.delete(`/blog/${id}`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  return res.data;\r\n};\r\n"],"names":["navigate","useNavigate","_jsx","className","children","_jsxs","Formik","initialValues","name","email","password","validate","values","errors","test","onSubmit","async","_ref","setSubmitting","setErrors","login","err","console","error","_ref2","isSubmitting","Form","Field","type","placeholder","ErrorMessage","component","disabled","onClick","Login","api","axios","create","baseURL","data","post","token","localStorage","setItem","_error$response","response","message","logout","headers","Authorization","concat","removeItem","getBlogs","get","createBlog","title","content","log","res","updateBlog","id","put","deleteBlog","delete"],"sourceRoot":""}